%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: D:\Dropbox\LSAlab\thesis\master-thesis\images\exp\log&exp table\high-occupancy\sMem-vs-cMem.eps
%%CreationDate: 06/19/2014  16:16:06
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 2466 3519 0 0 -2466 590 2693 4 MP
PP
-3519 0 0 2466 3519 0 0 -2466 590 2693 5 MP stroke
4 w
DO
SO
6 w
0 sg
 590  227 mt 4109  227 L
 590 2693 mt 4109 2693 L
4109 2693 mt 4109  227 L
 590 2693 mt  590  227 L
 590 2693 mt 4109 2693 L
 590 2693 mt  590  227 L
1029 2693 mt 1029 2657 L
1029  227 mt 1029  262 L
1909 2693 mt 1909 2657 L
1909  227 mt 1909  262 L
2789 2693 mt 2789 2657 L
2789  227 mt 2789  262 L
3669 2693 mt 3669 2657 L
3669  227 mt 3669  262 L
 590 2693 mt  625 2693 L
4109 2693 mt 4073 2693 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 489 2737 mt 
(0) s
 590 2199 mt  625 2199 L
4109 2199 mt 4073 2199 L
 355 2243 mt 
(100) s
 590 1706 mt  625 1706 L
4109 1706 mt 4073 1706 L
 355 1750 mt 
(200) s
 590 1213 mt  625 1213 L
4109 1213 mt 4073 1213 L
 355 1257 mt 
(300) s
 590  720 mt  625  720 L
4109  720 mt 4073  720 L
 355  764 mt 
(400) s
 590  227 mt  625  227 L
4109  227 mt 4073  227 L
 355  271 mt 
(500) s
 590  227 mt 4109  227 L
 590 2693 mt 4109 2693 L
4109 2693 mt 4109  227 L
 590 2693 mt  590  227 L
gs 590 227 3520 2467 rc
/c8 { 0.000000 0.000000 0.562500 sr} bdef
c8
0 2303 156 0 0 -2303 756 2693 4 MP
PP
0 sg
-156 0 0 2303 156 0 0 -2303 756 2693 5 MP stroke
c8
0 2292 157 0 0 -2292 1635 2693 4 MP
PP
0 sg
-157 0 0 2292 157 0 0 -2292 1635 2693 5 MP stroke
c8
0 2289 157 0 0 -2289 2515 2693 4 MP
PP
0 sg
-157 0 0 2289 157 0 0 -2289 2515 2693 5 MP stroke
c8
0 2052 156 0 0 -2052 3395 2693 4 MP
PP
0 sg
-156 0 0 2052 156 0 0 -2052 3395 2693 5 MP stroke
3519 0 590 2693 2 MP stroke
/c9 { 0.562500 1.000000 0.437500 sr} bdef
c9
0 2191 157 0 0 -2191 951 2693 4 MP
PP
0 sg
-157 0 0 2191 157 0 0 -2191 951 2693 5 MP stroke
c9
0 1847 156 0 0 -1847 1831 2693 4 MP
PP
0 sg
-156 0 0 1847 156 0 0 -1847 1831 2693 5 MP stroke
c9
0 1899 156 0 0 -1899 2711 2693 4 MP
PP
0 sg
-156 0 0 1899 156 0 0 -1899 2711 2693 5 MP stroke
c9
0 1799 157 0 0 -1799 3590 2693 4 MP
PP
0 sg
-157 0 0 1799 157 0 0 -1799 3590 2693 5 MP stroke
/c10 { 0.500000 0.000000 0.000000 sr} bdef
c10
0 2300 156 0 0 -2300 1147 2693 4 MP
PP
0 sg
-156 0 0 2300 156 0 0 -2300 1147 2693 5 MP stroke
c10
0 1908 157 0 0 -1908 2026 2693 4 MP
PP
0 sg
-157 0 0 1908 157 0 0 -1908 2026 2693 5 MP stroke
c10
0 1883 157 0 0 -1883 2906 2693 4 MP
PP
0 sg
-157 0 0 1883 157 0 0 -1883 2906 2693 5 MP stroke
c10
0 1741 156 0 0 -1741 3786 2693 4 MP
PP
0 sg
-156 0 0 1741 156 0 0 -1741 3786 2693 5 MP stroke
gr

 273 2161 mt  -90 rotate
(kernel execution time \(ms\)) s
90 rotate
 573 2736 mt 
( ) s
4093  269 mt 
( ) s
1015 2756 mt  -340 rotate
(baseline) s
340 rotate
1895 2756 mt  -340 rotate
(removing MOD\(bit operations\)) s
340 rotate
2775 2756 mt  -340 rotate
(removing MOD\(table augmentation\)) s
340 rotate
3655 2756 mt  -340 rotate
(further removing branches) s
340 rotate
1 sg
0 480 2290 0 0 -480 1760 2634 4 MP
PP
-2290 0 0 480 2290 0 0 -480 1760 2634 5 MP stroke
4 w
DO
SO
6 w
0 sg
1760 2154 mt 4050 2154 L
1760 2634 mt 4050 2634 L
4050 2634 mt 4050 2154 L
1760 2634 mt 1760 2154 L
1760 2634 mt 4050 2634 L
1760 2634 mt 1760 2154 L
1760 2154 mt 4050 2154 L
1760 2634 mt 4050 2634 L
4050 2634 mt 4050 2154 L
1760 2634 mt 1760 2154 L
2233 2289 mt 
(constant memory) s
gs 1760 2154 2291 481 rc
c8
-364 0 0 109 364 0 0 -109 1832 2300 5 MP
PP
0 sg
0 0 -364 0 0 109 364 0 0 -109 1832 2300 6 MP stroke
gr

2233 2437 mt 
(shared memory \(initialize serially\)) s
gs 1760 2154 2291 481 rc
c9
-364 0 0 109 364 0 0 -109 1832 2448 5 MP
PP
0 sg
0 0 -364 0 0 109 364 0 0 -109 1832 2448 6 MP stroke
gr

2233 2585 mt 
(shared memory \(load parallelly\)) s
gs 1760 2154 2291 481 rc
c10
-364 0 0 109 364 0 0 -109 1832 2596 5 MP
PP
0 sg
0 0 -364 0 0 109 364 0 0 -109 1832 2596 6 MP stroke
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
