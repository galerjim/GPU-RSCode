digraph GPUencode
{
rankdir=LR;
compound=true;
subgraph clusterCPU
{
node [style=filled];
shape=box;
label="CPU";
"hostMem"
[
shape=box
label="host memory"
]
/*
hostMem [shape=box];
*/
}
//n_k [label="n, k"];
/*
subgraph n_k
{
label="n,k"
}
*/
subgraph clusterGPU
{
node [style=filled];
shape=box;
label="GPU\n\n2.generate encoding matrix\n3.encode";
//"3.encode";
"deviceMem"
[
shape=box
label="device memory"
]
//deviceMem -> deviceMem [label="3.encode", ltail=clusterGPU];
/*
deviceMem [shape=box];
label=GPU;
*/
}
hostMem -> deviceMem [label="1.copy k data chunks"];
deviceMem -> hostMem [label="4.copy encoding matrix"];
deviceMem -> hostMem [label="5.copy (n-k) code chunks"];
//"n,k" -> deviceMem [label="2.generate encoding matrix", lhead=clusterGPU];
"n,k" -> deviceMem [lhead=clusterGPU];
}
